version: "3.8"

networks:
  my-network:
    #    docker network create --gateway 172.18.0.1 --subnet 172.18.0.0/16 ecommerce-network
    external: true
    name: ecommerce-network


services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "15671:15671"
      - "15672:15672"
      - "5671:5671"
      - "5672:5672"
      - "4369:4369"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my-network

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      my-network:
        ipv4_address: 172.18.0.100
  kafka:
    # build: .
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.101
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      my-network:
        ipv4_address: 172.18.0.101

  config-server:
    container_name: config-server
    image: ndy2/config-server:1.0
    ports:
      - "8888:8888"
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.profiles.active: default
    depends_on:
      - zipkin
      - rabbitmq
      - kafka
      - zookeeper
      - db
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  service-discovery:
    container_name: service-discovery
    image: ndy2/service-discovery:1.0
    ports:
      - "8761:8761"
    environment:
      spring.cloud.config.uri: http://config-server:8888
      spring.zipkin.base-url: http://zipkin:9411
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - my-network

  apigateway:
    container_name: apigateway
    image: ndy2/apigateway:1.0
    ports:
      - "8000:8000"
    environment:
      spring.cloud.config.uri: http://config-server:8888
      spring.rabbitmq.host: rabbitmq
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
      spring.zipkin.base-url: http://zipkin:9411
    depends_on:
      service-discovery:
        condition: service_started
    networks:
      - my-network

  db:
    container_name: db
    image: mysql:5.7
    ports:
      - "8080:3306"
    environment:
      MYSQL_DATABASE: mydb
      MYSQL_ROOT_PASSWORD: deukyun
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -uroot --password=$$MYSQL_ROOT_PASSWORD
    networks:
      - my-network

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - my-network

  user-service:
    container_name: user-service
    image: ndy2/user-service:1.0
    environment:
      spring.cloud.config.uri: http://config-server:8888
      spring.rabbitmq.host: rabbitmq
      spring.zipkin.base-url: http://zipkin:9411
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
      spring.datasource.url: jdbc:mysql://db:8080/mydb?useSSL=false&characterEncoding=UTF-8&serverTimeZone=Asia/Seoul
      logging.file: /api-logs/users-ws.log
    depends_on:
      - apigateway
    networks:
      my-network:
        ipv4_address: 172.18.0.12

  order-service:
    container_name: order-service
    image: ndy2/order-service:1.0
    environment:
      spring.cloud.config.uri: http://config-server:8888
      spring.rabbitmq.host: rabbitmq
      spring.zipkin.base-url: http://zipkin:9411
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
      spring.datasource.url: jdbc:mysql://db:8080/mydb?useSSL=false&characterEncoding=UTF-8&serverTimeZone=Asia/Seoul
      logging.file: /api-logs/orders-ws.log
    depends_on:
      - apigateway
    networks:
      my-network:
        ipv4_address: 172.18.0.13
  
  product-service:
    container_name: product-service
    image: ndy2/product-service:1.0
    environment:
      spring.cloud.config.uri: http://config-server:8888
      spring.rabbitmq.host: rabbitmq
      spring.zipkin.base-url: http://zipkin:9411
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
      spring.datasource.url: jdbc:mysql://db:8080/mydb?useSSL=false&characterEncoding=UTF-8&serverTimeZone=Asia/Seoul
      logging.file: /api-logs/products-ws.log
    depends_on:
      - apigateway
    networks:
      my-network:
        ipv4_address: 172.18.0.14